
What happens when you initialize a repository? Why do you need to do it?
- The git init command creates an empty .git directory which will contain the version control meta data,
- such as history.

[Working Directory] -> (git add) -> [Staging Area] -> (git commit) -> [Local Repository] -> (git push) -> [Remote/Main Repository]

How is the staging area different from the working directory and the repository? What value do you think it offers?
- The Working Directory contains all to unmodified and modified files. The Staging Area contains the modified files that you want to commit. These
files are usually related to one another and represent a conceptual unit of work.

How can you use the staging area to make sure you have one commit per logical change?
- Just git add only the files related the the logical change. This will place these related files into the staging area, and these
- related files can be committed as a unit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- Branches are helpful when you want to make changes but you're not ready to change the main master branch.

How do the diagrams help you visualize the branch structure?
- The diagrams show the relationship of every commit

